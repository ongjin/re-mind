<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="memberMapper">

    <resultMap id="member_rm" type="Member">
        <id property="memberNo" column="MEMBER_NO"/>
        <result property="memberId" column="MEMBER_ID"/>
        <result property="memberPw" column="MEMBER_PW"/>
        <result property="memberName" column="MEMBER_NM"/>
        <result property="memberAddress" column="MEMBER_ADDR"/>
        <result property="memberFName" column="MEMBER_FN"/>
        <result property="memberPhone" column="MEMBER_PHONE"/>
        <result property="memberGender" column="MEMBER_GENDER"/>
        <result property="memberEnrollDate" column="MEMBER_ENROLL_DT"/>
        <result property="statusCode" column="STATUS_CD"/>
        <result property="imagePath" column="IMAGE_PATH"/>
        <result property="imageName" column="IMAGE_NM"/>
        
    </resultMap>

    <resultMap id="social_rm" type="Naver">
        <id property="memberSocialNo" column="MEMBER_SOCIAL_NO"/>
        <result property="memberSocialToken" column="MEMBER_SOCIAL_TOKEN"/>
        <result property="memberNo" column="MEMBER_NO"/>
        <result property="socialType" column="SOCIAL_TYPE"/>
    </resultMap>

    <resultMap id="mute_rm" type="Mute">
        <id property="muteNo" column="MUTE_NO"/>
        <result property="memberNo" column="MEMBER_NO"/>
        <result property="memberName" column="MEMBER_NM"/>
        <result property="memberFName" column="MEMBER_FN"/>
        <result property="memberPhone" column="MEMBER_PHONE"/>
        <result property="imagePath" column="IMAGE_PATH"/>
        <result property="imageName" column="IMAGE_NM"/>
        <result property="imageLevel" column="IMAGE_LEVEL"/>
    </resultMap>

    <resultMap id="reservation_rm" type="Reservation">
        <id property="reservationNo" column="RESERVATION_NO"/>

        <result property="reservationEnrollDate" column="RESERVATION_ENROLL_DT"/>
        <result property="reservationEnrollTime" column="RESERVATION_ENROLL_TIME"/>
        <result property="reservationStatusCode" column="RESERVATION_STATUS_CD"/>
        <result property="reservationCancel" column="RESERVATION_CANCEL"/>
        <result property="counselCategoryNo" column="COUNSEL_CATEGORY_NO"/>
        <result property="reservationPayNo" column="RESERVATION_PAY_NO"/>
        <result property="counselCategoryNm" column="COUNSEL_CATEGORY_NM"/>
        <result property="PayNo" column="PAY_NO"/>
        <result property="memberNo" column="MEMBER_NO"/>
        <result property="memberName" column="MEMBER_NM"/>

        <result property="professionNo" column="PROFESSION_NO"/>
        <result property="professionName" column="PROFESSION_NM"/>
        <result property="statusCode" column="STATUS_CD"/>
    </resultMap>
    <!-- 로그인 -->
    <select id="emailLogin" resultMap="member_rm">
        SELECT * FROM MEMBER
        WHERE MEMBER_ID = #{memberId}
        AND STATUS_CD IN(0, 9)
    </select>
    
    <!-- 프로필 사진  -->
    <select id="selectUserPic" resultMap="member_rm">
		SELECT IMAGE_PATH, IMAGE_NM FROM IMAGE 
		WHERE MEMBER_NO = (    SELECT MEMBER_NO
		                       FROM MEMBER 
		                       WHERE MEMBER_ID = #{memberId}
		                       AND STATUS_CD = 0)
		AND IMAGE_LEVEL = 0
    </select>
     <!-- 아이디 중복 검사 -->
	 <select id="idDupCheck"  resultType="_int" >
	 SELECT COUNT(*) FROM MEMBER
	 WHERE MEMBER_ID = #{inputId}
	 AND STATUS_CD != 1
	 </select>
	 
	 <!-- 닉네임 중복 검사 -->
	 <select id="nickNmDupCheck"  resultType="_int" >
	 SELECT COUNT(*) FROM MEMBER
	 WHERE MEMBER_FN = #{inputNickNm}
	 AND STATUS_CD != 1
	 </select>
	 
	 <!--  회원 가입 -->			
	 <insert id="signUp" parameterType="Member">
	 INSERT INTO MEMBER VALUES(
	 	SEQ_MEMBER_NO.NEXTVAL, #{memberId}, #{memberPw}, #{memberName},
	 	#{memberAddress}, #{memberFName}, #{memberPhone}, #{memberGender}, DEFAULT, DEFAULT)
	 </insert>

    <select id="socialCheck" resultMap="member_rm">
        SELECT * FROM MEMBER WHERE MEMBER_PHONE = #{memberPhone}
    </select>

    <insert id="socialSignUp" useGeneratedKeys="true">
        <selectKey order="BEFORE" resultType="_int" keyProperty="memberNo">
            SELECT SEQ_MEMBER_NO.NEXTVAL FROM DUAL
        </selectKey>
        INSERT INTO MEMBER VALUES(
        #{memberNo}, #{memberId}, NULL, #{memberName}, NULL, #{memberFName}, #{memberPhone}, #{memberGender}, DEFAULT, DEFAULT)
    </insert>

    <insert id="insertToken">
        INSERT INTO MEMBER_SOCIAL VALUES(
        SEQ_MEMBER_SOCIAL_NO.NEXTVAL, #{memberSocialToken}, #{memberNo}, #{socialType})
    </insert>

<!--    소셜로그인 가입이 되어있는지 검삭-->
    <select id="selectToken" resultType="_int">
        SELECT COUNT(*) FROM MEMBER_SOCIAL
        WHERE MEMBER_NO = #{memberNo}
    </select>

    <select id="selectMuteMember" resultMap="mute_rm">
        SELECT T.MUTE_NO, T.MEMBER_NO, MEMBER_NM, MEMBER_FN, MEMBER_PHONE, IMAGE_PATH, IMAGE_NM
        FROM MUTE T
                 JOIN MEMBER ON(T.MUTE_NO = MEMBER.MEMBER_NO)
                 LEFT JOIN IMAGE ON(IMAGE.MEMBER_NO = T.MUTE_NO)
        WHERE T.MEMBER_NO = #{memberNo} AND (IMAGE_LEVEL = 0 OR IMAGE_LEVEL IS NULL)
    </select>

    <delete id="clearMember">
        DELETE FROM MUTE
        WHERE MUTE_NO = #{muteNo} AND MEMBER_NO = #{memberNo}
    </delete>

    <delete id="deleteToken">
        DELETE FROM MEMBER_SOCIAL
        WHERE MEMBER_SOCIAL_TOKEN = #{memberSocialToken} AND MEMBER_NO = #{memberNo}
    </delete>
    <update id="deleteSocial">
        UPDATE MEMBER SET
            MEMBER_PHONE = '',
            STATUS_CD = '1'
        WHERE MEMBER_NO = #{memberNo}
    </update>
    <update id="secessionMember">
        UPDATE MEMBER SET
            STATUS_CD = '1'
        WHERE MEMBER_NO = #{memberNo}
    </update>

    <select id="selectReservation" resultMap="reservation_rm">
        SELECT r.RESERVATION_NO, TO_CHAR(r.RESERVATION_ENROLL_DT, 'YYYY-MM-DD') RESERVATION_ENROLL_DT,
            r.RESERVATION_ENROLL_TIME, r.COUNSEL_CATEGORY_NO, r.RESERVATION_STATUS_CD, cc.COUNSEL_CATEGORY_NM,
            rp.RESERVATION_PAY_NO, rp.MEMBER_NO, rp.PROFESSION_NO, rp.STATUS_CD,
            m.MEMBER_NM, p.PROFESSION_NM
        FROM RESERVATION r
        JOIN RESERVATION_PAYMENT rp ON rp.RESERVATION_PAY_NO = r.RESERVATION_PAY_NO
        JOIN COUNSEL_CATEGORY cc ON cc.COUNSEL_CATEGORY_NO = r.COUNSEL_CATEGORY_NO
        JOIN MEMBER m ON m.MEMBER_NO = rp.MEMBER_NO
        JOIN PROFESSION p ON p.PROFESSION_NO = rp.PROFESSION_NO
        WHERE rp.MEMBER_NO = #{memberNo}
        AND r.RESERVATION_ENROLL_DT >= TO_CHAR(SYSDATE, 'YYYY-MM-DD')
        <if test="reservationStatusCode != 0">
            AND r.RESERVATION_STATUS_CD = #{reservationStatusCode}
        </if>
        ORDER BY r.RESERVATION_ENROLL_DT DESC, r.RESERVATION_ENROLL_TIME ASC
    </select>

    <update id="appointmentDecrease">
        UPDATE RESERVATION_PAYMENT SET USED_CNT = USED_CNT - 1
        WHERE MEMBER_NO = 3
        AND STATUS_CD = 1
        AND USED_CNT > 0
    </update>

    <update id="appointmentCancel">
        UPDATE RESERVATION SET RESERVATION_STATUS_CD = 3, RESERVATION_CANCEL = '예약 취소'
        WHERE RESERVATION_NO = #{reservationNo}
        AND RESERVATION_STATUS_CD = 1
    </update>

    <select id="selectPw" resultType="string">
        SELECT MEMBER_PW
        FROM MEMBER
        WHERE MEMBER_NO = #{memberNo} AND STATUS_CD = 0
    </select>

    <update id="updateMemberFName">
        UPDATE MEMBER SET
            MEMBER_FN = #{memberFName}
        WHERE MEMBER_NO = #{memberNo} AND STATUS_CD = 0
    </update>

<!--    관리자 페이지 -->
    <select id="selectAuthority" resultType="_int">
        SELECT STATUS_CD
        FROM MEMBER
        <where>
            MEMBER_NO = #{memberNo}
        </where>
    </select>
    <select id="selectMember" resultMap="member_rm">
        SELECT MEMBER_NO, MEMBER_ID, MEMBER_NM, MEMBER_ADDR, MEMBER_FN, MEMBER_PHONE, MEMBER_ENROLL_DT, STATUS_CD
        FROM MEMBER
        <where>
            STATUS_CD IN(0, 2)
        </where>
    </select>
    <update id="stopMember">
        UPDATE MEMBER SET
            STATUS_CD = 2
        WHERE MEMBER_NO = #{memberNo}
    </update>
    <update id="rollbackMember">
        UPDATE MEMBER SET
            STATUS_CD = 0
        WHERE MEMBER_NO = #{memberNo}
    </update>

    <select id="detailMember" resultMap="member_rm">
        SELECT M.MEMBER_NO, MEMBER_ID, MEMBER_NM, MEMBER_FN, MEMBER_ADDR, MEMBER_PHONE,
               MEMBER_GENDER, MEMBER_ENROLL_DT, STATUS_CD, IMAGE_PATH, IMAGE_NM
        FROM MEMBER M
                 LEFT JOIN IMAGE ON(M.MEMBER_NO = IMAGE.MEMBER_NO)
        WHERE M.MEMBER_NO = #{memberNo}
    </select>

</mapper>
